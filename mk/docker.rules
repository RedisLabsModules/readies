# defaults
PACK ?=0
TEST ?=0
LATEST ?=0
PREVIEW ?=0

DOCKER_SOURCES=""

ARCH:=$(shell $(READIES)/bin/platform --arch)

# for artifact gathering
ART_DIR ?= $(ROOT)/bin/artifacts
ART_INT_DIR ?= /var/opt/redislabs/artifacts
export ART_DIR
export ART_INT_DIR

ifndef VERSION
ifndef BRANCH
$(error Either VERSION or BRANCH must be set)
endif
endif

ifdef VERSION
ifdef BRANCH
$(error Only one of VERSION or BRANCH can be set)
endif
endif

ifdef BRANCH
ifndef VERSION
VERSION=$(BRANCH)
endif
endif

# master is an edge
ifeq ($(VERSION),master)
VERSION=edge
endif

# main is a master is an edge
ifeq ($(VERSION),main)
VERSION=edge
endif

MAJMINVER=$(shell echo $(VERSION) | cut -d '.' -f 1-2)

# e.g redisfab/RedisTimeSeries:edge
DOCKER_ORG ?= redisfab
DEFAULT_TAG?=$(DOCKER_ORG)/$(PRODUCT):$(VERSION)-$(ARCH)-$(OSNICK)

# if OSNICK and PUBLISH_OSNICK match, then we're building the docker
# that we should push upstream to dockerhub as edge/1.2/etc.
ifeq ($(PUBLISH_OSNICK),$(OSNICK))
DOCKER_TAGS += redislabs/$(PRODUCT):$(VERSION)

# LATEST tag - if LATEST_BRANCH in the makefile matches our ~version
ifeq ($(LATEST_BRANCH),$(MAJMINVER))
# LATEST_SUFFIX allows for a custom latest (i.e redisai:latest-cpu
DOCKER_TAGS += redislabs/$(PRODUCT):latest${LATEST_SUFFIX}
endif

# PREVIEW tag - if PREVIEW_BRANCH in the makefile matches our ~version
ifeq ($(PREVIEW_BRANCH),$(MAJMINVER))
# LATEST_SUFFIX allows for a custom preview (i.e redisai:latest-cpu
DOCKER_TAGS += redislabs/$(PRODUCT):preview${PREVIEW_SUFFIX}
endif
endif

# defaults for wrapper script
NOP=0
PUBLISH=0
KEEP=0
VERBOSE=0

# There are mappings between OSNICK to specific OS values, due to docker containers used
# The global mappings are found here.
include $(READIES)/mk/osnick.defs
include $(READIES)/mk/help.defs

ifndef DOCKER_SUFFIX
DOCKER_SUFFIX=.${OSNICK}
endif

## This builds the docker
build:
	DOCKER_SOURCES=$(DOCKER_SOURCES) \
	DOCKER_TAGS="$(DOCKER_TAGS)" \
	NOP=$(NOP) \
	DOCKER_PUSH=$(PUBLISH) \
	VERBOSE=$(VERBOSE) \
	KEEP=$(KEEP) \
	REDIS_VERSION=$(REDIS_VERSION) \
	REDIS_PRODUCT=$(PRODUCT) \
	REDIS_DOCKER_ORG=$(DOCKER_ORG) \
	REDIS_OSNICK=$(OSNICK) \
	REDIS_OS=$(OS) \
	REDIS_ARCH=$(ARCH) \
	REDIS_PACK=$(PACK) \
	REDIS_TEST=$(TEST) \
	$(DOCKERWRAPPER_EXTRA_VARS) \
	$(READIES)/bin/dockerwrapper \
		-d $(ROOT)/Dockerfile$(DOCKER_SUFFIX) \
		-t $(DEFAULT_TAG) \
		-e REDIS \
		-D "$(DOCKER_OPTS)" \
		$(DOCKER_ARGS)
ifeq ($(PACK),1)
	IMAGE=$(DEFAULT_TAG) $(MK)/docker-collect-artifacts
endif

include $(READIES)/mk/help.rules

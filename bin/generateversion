#!/bin/sh

#
# Generate the version definition of a given artifact. This can be used in one of two ways:
# 1. As a shell function:
#    source generateversion; generate_version() - This allows you to reuse the output generated from the function
#
# 2. Calling the script directly, with any argument
#    ./generateversion something - This outputs the version generated
#
# It defaults to automatically selecting architecture, versions, osnick, and products from the repository, but these can be
# overridden with environment variables. Finally, this works in sh, bash, and on non-GNU (i.e OSX) systems.
#

# Set in stone
ROOT=$(git rev-parse --show-toplevel)
BRANCHNAME=$(git branch|grep '*'|cut -d '*' -f 2-2|sed 's/^ *//g')
ARCH=$(${ROOT}/bin/platform --arch)

# Each of these can be overridden in the environment
if [ -z "${OSNICK}" ]; then
    OSNICK=$(${ROOT}/bin/platform --osnick)
fi

if [ -z "${PRODUCT}" ]; then
    PRODUCT=$(basename `git rev-parse --show-toplevel`)
fi

if [ -z "${VERSION}" ]; then
    VERSION=${BRANCHNAME}
fi

if [ ! -z "${EXTENSION}" ]; then
    EXT="-${EXTENSION}"
fi

RESULTANT_VERSION="${PRODUCT}-${VERSION}-${OSNICK}-${ARCH}${EXT}"

generate_version() {
    echo ${RESULTANT_VERSION}
}

if [ ! -z $1 ]; then
    generate_version
fi

#!/bin/bash

GOLANG_VER=1.15.6

HERE="$(cd "$(dirname "${BASH_SOURCE[0]}")" >/dev/null 2>&1 && pwd)"
READIES=$(cd $HERE/.. && pwd)
. $READIES/shibumi/defs

OP=""
[[ $NOP == 1 ]] && OP=echo

[[ ! -z $(command -v go) && $FORCE != 1 ]] && exit 0

OS=`uname -s`
TAR=tar
if [[ $OS == Linux ]]; then
	GOLANG_OS=linux
elif [[ $OS == Darwin ]]; then
	GOLANG_OS=darwin
else
	eprint "Cannot determine OS"
	exit 1
fi

ARCH=`uname -m`
if [[ $ARCH == x86_64 ]]; then
	GOLANG_ARCH=amd64
elif [[ $ARCH == aarch64 ]]; then
	GOLANG_ARCH=arm64
else
	eprint "Cannot determine CPU"
	exit 1
fi

tar=$(mktemp /tmp/golang.XXXXX.tag.gz)
$OP wget -q -O $tar https://dl.google.com/go/go${GOLANG_VER}.${GOLANG_OS}-${GOLANG_ARCH}.tar.gz
if [[ $OS == Darwin ]]; then
    $OP sudo /usr/local/bin/tar -C /usr/local -xpzf $tar
else
    $OP tar -C /usr/local -xzf $tar
    rm -f $tar/$$.tmp
fi
$OP rm -f $tar

if [[ `uname -s` == Darwin ]]; then
	profile_d="$HOME/.profile.d"
else
	profile_d="/etc/profile.d"
fi
if [[ $NOP != 1 ]]; then
    echo 'export PATH=$PATH:/usr/local/go/bin' > ${profile_d}/golang.sh
    echo 'export PATH=$PATH:`/usr/local/go/bin/go env GOPATH`/bin' >> ${profile_d}/golang.sh
fi

echo "to enable golang, invoke: source /etc/profile.d/golang.sh"

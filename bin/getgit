#!/bin/sh
''''[ ! -z $VIRTUAL_ENV ] && exec python -u -- "$0" ${1+"$@"}; command -v python3 > /dev/null && exec python3 -u -- "$0" ${1+"$@"}; exec python2 -u -- "$0" ${1+"$@"} # '''

import sys
import os
import argparse

HERE = os.path.dirname(__file__)
ROOT = os.path.abspath(os.path.join(HERE, ".."))
sys.path.insert(0, ROOT)
import paella

#----------------------------------------------------------------------------------------------

class GitSetup(paella.Setup):
    def __init__(self, nop=False):
        paella.Setup.__init__(self, nop)

    def common_first(self):
        self.install("git")

#----------------------------------------------------------------------------------------------

class GitSetupModern(paella.Setup):
    def __init__(self, nop=False):
        paella.Setup.__init__(self, nop)

    def debian_compat(self):
        self.run("apt-get install-info dh-autoreconf libcurl4-gnutls-dev libexpat1-dev \
  gettext libz-dev libssl-dev asciidoc xmlto docbook2x", sudo=True)

    def fedora(self):
        self.run("apt-get install dh-autoreconf curl-devel expat-devel gettext-devel \
  openssl-devel perl-devel zlib-devel asciidoc xmlto docbook2X getopt", sudo=True)
        self.run("ln -s /usr/bin/db2x_docbook2texi /usr/bin/docbook2x-texi", sudo=True)

    # todo replace hardcoded git version
    def common_last(self):
        self.run("""
        export LDFLAGS=-L/usr/local/lib64/
        curl -L -O http://kernel.org/pub/software/scm/git/git-2.8.0.tar.gz
        tar -zxf git-2.8.0.tar.gz
        cd git-2.8.0
        make configure
        ./configure --prefix=/usr
        make all doc info
        sudo make install install-doc install-html install-info
        """)

#----------------------------------------------------------------------------------------------

parser = argparse.ArgumentParser(description='Install Docker CE')
parser.add_argument('-n', '--nop', action="store_true", help='no operation')
parser.add_argument('--modern', action="store_true", help='install Docker Compose')
args = parser.parse_args()

if args.modern:
    GitSetupModern(nop = args.nop).setup()
else:
    GitSetup(nop = args.nop).setup()
